// Manifest version information!
def versionMajor = 1
def versionMinor = 1
def versionPatch = 14
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))
// whether the build environment is Travis CI
def isTravis = "true".equals(System.getenv("TRAVIS"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))
// get the keystore properties file
def propsFile = rootProject.file('keystore.properties')

// method to generate version code depend on min sdk version
def getVersionCode = {minSdkVersion ->
    return 2000000000 + versionMajor * 10000000 + versionMinor * 100000 + versionPatch * 1000 + versionBuild * 100 + minSdkVersion
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"

    dataBinding {
        enabled = true
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isTravis
    }

    signingConfigs {
        release {
            if (propsFile.exists()) {
                // properties file exists.
                // read signing key from properties file
                def props = new Properties()
                props.load(new FileInputStream(propsFile))
                storeFile = rootProject.file(props['storeFile'])
                storePassword = props['storePassword']
                keyAlias = props['keyAlias']
                keyPassword = props['keyPassword']
            } else if (System.console() != null) {
                // console is available, ask user to input key information manually
                storeFile rootProject.file(System.console().readLine("\nKeystore file path: "))
                storePassword System.console().readLine("\nKeystore password: ")
                keyAlias System.console().readLine("\nKey alias: ")
                keyPassword System.console().readLine("\nKey password: ")
            } else {
                // missing keystore information, and no console is available. Will cause error
                // during build
                storeFile file("missing.keystore")
                storePassword ""
                keyAlias ""
                keyPassword ""
            }
        }
    }

    defaultConfig {
        applicationId "com.app.missednotificationsreminder"
        targetSdkVersion 23
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""

        signingConfig signingConfigs.release

        testInstrumentationRunner "com.app.missednotificationsreminder.ApplicationTestRunner"
    }
    buildTypes {
        debug {
            // the debug application will have separate suffix in package so both debug and release
            // can be installed at the same time
            applicationIdSuffix '.debug'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // generate more meaningful app file name in format
            // <Project_Name>-production-v<Version_Name>.apk.
            // Example: MissingNOtificationsReminder-release-v1.0.0.apk
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def newName = output.outputFile.name
                    newName = newName.replace("app", rootProject.name)
                    newName = newName.replace("release", "release-v" + variant.mergedFlavor.versionName)
                    output.outputFile = new File(output.outputFile.parent, newName)
                }
            }
        }
    }

    productFlavors {
        v18 {
            minSdkVersion 18
            versionCode getVersionCode(18)
        }
        v14 {
            minSdkVersion 14
            versionCode getVersionCode(14)
        }
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        fatal 'UnusedResources'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

configurations.all {
    resolutionStrategy {
        force 'com.android.support:support-annotations:23.1.0'
    }
}

ext {
    androidSupportLibraryVersion = "26.0.1"
    leakCanaryVersion = "1.5.1"
    timberVersion = "4.5.1"
}

dependencies {
    compile "com.android.support:support-v4:${androidSupportLibraryVersion}"
    compile "com.android.support:support-annotations:${androidSupportLibraryVersion}"
    compile "com.android.support:appcompat-v7:${androidSupportLibraryVersion}"
    compile "com.android.support:recyclerview-v7:${androidSupportLibraryVersion}"
    compile "com.android.support:cardview-v7:${androidSupportLibraryVersion}"
    compile "com.android.support:design:${androidSupportLibraryVersion}"

    compile "com.jakewharton.timber:timber:${timberVersion}"

    debugCompile 'com.jakewharton:butterknife:8.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.2.1'
    debugCompile 'com.jakewharton.madge:madge:1.1.4'
    debugCompile 'com.jakewharton.scalpel:scalpel:1.1.2'
    debugCompile 'com.jakewharton.threetenabp:threetenabp:1.0.2'
    debugCompile 'com.squareup.okio:okio:1.6.0'
    debugCompile 'com.mattprecious.telescope:telescope:1.5.0@aar'

    compile 'com.squareup.dagger:dagger:1.2.2'
    annotationProcessor 'com.squareup.dagger:dagger-compiler:1.2.2'
    testAnnotationProcessor 'com.squareup.dagger:dagger-compiler:1.2.2'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'

    compile 'com.squareup.picasso:picasso:2.5.2'

    compile 'io.reactivex:rxjava:1.2.9'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.7.0@aar'
    compile 'com.jakewharton.rxbinding:rxbinding:0.2.0'

    compile 'com.f2prateek.rx.preferences:rx-preferences:1.0.0'

    compile 'com.appyvet:materialrangebar:1.3'
    compile 'com.wdullaer:materialdatetimepicker:2.1.0'

    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2'
    androidTestCompile 'com.android.support.test:runner:0.3'
    androidTestCompile 'com.android.support.test:rules:0.3'
    // Espresso-contrib for DatePicker, RecyclerView, Drawer actions, Accessibility checks, CountingIdlingResource
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.1') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }

    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.+"
    testCompile 'com.google.truth:truth:0.27'
}
